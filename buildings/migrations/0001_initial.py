# Generated by Django 5.1.3 on 2024-12-06 03:07

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Building",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("address", models.CharField(max_length=500)),
                ("postal_code", models.CharField(max_length=10)),
                ("city", models.CharField(max_length=100)),
                ("state", models.CharField(max_length=50)),
                (
                    "latitude",
                    models.DecimalField(decimal_places=6, max_digits=9, null=True),
                ),
                (
                    "longitude",
                    models.DecimalField(decimal_places=6, max_digits=9, null=True),
                ),
                ("website", models.URLField(max_length=500)),
                ("phone", models.CharField(blank=True, max_length=20, null=True)),
                ("year_built", models.IntegerField(blank=True, null=True)),
                ("amenities", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="ScrapingRun",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("items_processed", models.IntegerField(default=0)),
                ("items_created", models.IntegerField(default=0)),
                ("items_updated", models.IntegerField(default=0)),
                ("items_errored", models.IntegerField(default=0)),
                ("error_log", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="ScrapingSource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("base_url", models.URLField(max_length=500)),
                ("is_active", models.BooleanField(default=True)),
                ("scraping_frequency_hours", models.IntegerField(default=24)),
                ("scraping_config", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Apartment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("unit_number", models.CharField(max_length=20)),
                ("floor", models.IntegerField()),
                ("bedrooms", models.DecimalField(decimal_places=1, max_digits=3)),
                ("bathrooms", models.DecimalField(decimal_places=1, max_digits=3)),
                ("area_sqft", models.IntegerField()),
                ("apartment_type", models.CharField(max_length=50)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("available", "Available"),
                            ("pending", "Pending"),
                            ("leased", "Leased"),
                            ("unavailable", "Unavailable"),
                        ],
                        default="available",
                        max_length=20,
                    ),
                ),
                ("features", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "building",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="apartments",
                        to="buildings.building",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BuildingWatchlist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("notify_new_units", models.BooleanField(default=True)),
                (
                    "unit_type_preference",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "max_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_notified", models.DateTimeField(blank=True, null=True)),
                (
                    "building",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="building_watchlists",
                        to="buildings.building",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="building_watchlist",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NewUserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                (
                    "preferred_contact_method",
                    models.CharField(
                        choices=[("email", "Email"), ("phone", "Phone")],
                        default="email",
                        max_length=10,
                    ),
                ),
                ("apartment_preferences", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "borough",
                    models.CharField(
                        choices=[
                            ("MAN", "Manhattan"),
                            ("BRK", "Brooklyn"),
                            ("QNS", "Queens"),
                            ("BRX", "Bronx"),
                            ("NJ", "New Jersey"),
                        ],
                        max_length=3,
                    ),
                ),
                (
                    "neighborhood",
                    models.CharField(
                        choices=[
                            ("LES", "Lower East Side"),
                            ("FID", "Financial District"),
                            ("HEL", "Hell's Kitchen"),
                            ("CHE", "Chelsea"),
                            ("UES", "Upper East Side"),
                            ("UWS", "Upper West Side"),
                            ("HAR", "Harlem"),
                            ("GRV", "Greenwich Village"),
                            ("SOH", "SoHo"),
                            ("TRI", "Tribeca"),
                            ("LIC", "Long Island City"),
                            ("AST", "Astoria"),
                            ("FLU", "Flushing"),
                            ("WBG", "Williamsburg"),
                            ("DUM", "DUMBO"),
                            ("DTB", "Downtown Brooklyn"),
                            ("BRH", "Brooklyn Heights"),
                            ("JCC", "Jersey City"),
                            ("HOB", "Hoboken"),
                            ("UNC", "Union City"),
                        ],
                        max_length=3,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["borough"], name="buildings_r_borough_96d211_idx"
                    ),
                    models.Index(
                        fields=["neighborhood"], name="buildings_r_neighbo_254bbc_idx"
                    ),
                ],
                "unique_together": {("borough", "neighborhood")},
            },
        ),
        migrations.AddField(
            model_name="building",
            name="region",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="buildings",
                to="buildings.region",
            ),
        ),
        migrations.CreateModel(
            name="PriceChange",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("old_price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("new_price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("detected_at", models.DateTimeField(auto_now_add=True)),
                (
                    "apartment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="price_changes",
                        to="buildings.apartment",
                    ),
                ),
                (
                    "scraping_run",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="price_changes",
                        to="buildings.scrapingrun",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="scrapingrun",
            name="source",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="runs",
                to="buildings.scrapingsource",
            ),
        ),
        migrations.CreateModel(
            name="WatchlistAlert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("new_unit", "New Unit Available"),
                            ("price_change", "Price Change"),
                            ("status_change", "Status Change"),
                        ],
                        max_length=20,
                    ),
                ),
                ("message", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("read", models.BooleanField(default=False)),
                (
                    "apartment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="buildings.apartment",
                    ),
                ),
                (
                    "building",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="buildings.building",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="watchlist_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ApartmentPrice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("lease_term_months", models.IntegerField()),
                ("is_special_offer", models.BooleanField(default=False)),
                ("special_offer_details", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "apartment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="price_history",
                        to="buildings.apartment",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["start_date"], name="buildings_a_start_d_3196cb_idx"
                    ),
                    models.Index(fields=["price"], name="buildings_a_price_645bb9_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="ApartmentWatchlist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("notify_price_change", models.BooleanField(default=True)),
                ("notify_availability_change", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_notified", models.DateTimeField(blank=True, null=True)),
                (
                    "apartment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="apartment_watchlists",
                        to="buildings.apartment",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="apartment_watchlist",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["created_at"], name="buildings_a_created_88f306_idx"
                    ),
                    models.Index(
                        fields=["last_notified"], name="buildings_a_last_no_8b6881_idx"
                    ),
                ],
                "unique_together": {("user", "apartment")},
            },
        ),
        migrations.AddIndex(
            model_name="apartment",
            index=models.Index(fields=["status"], name="buildings_a_status_5d9839_idx"),
        ),
        migrations.AddIndex(
            model_name="apartment",
            index=models.Index(
                fields=["bedrooms"], name="buildings_a_bedroom_214742_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="apartment",
            index=models.Index(
                fields=["area_sqft"], name="buildings_a_area_sq_6f0d8e_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="apartment",
            unique_together={("building", "unit_number")},
        ),
        migrations.AddIndex(
            model_name="buildingwatchlist",
            index=models.Index(
                fields=["created_at"], name="buildings_b_created_aaafe0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="buildingwatchlist",
            index=models.Index(
                fields=["last_notified"], name="buildings_b_last_no_2b4675_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="buildingwatchlist",
            index=models.Index(
                fields=["unit_type_preference"], name="buildings_b_unit_ty_10c5b1_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="buildingwatchlist",
            unique_together={("user", "building")},
        ),
        migrations.AddIndex(
            model_name="building",
            index=models.Index(
                fields=["postal_code"], name="buildings_b_postal__5fddbd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="building",
            index=models.Index(
                fields=["city", "state"], name="buildings_b_city_9d7dbc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="building",
            index=models.Index(
                fields=["region"], name="buildings_b_region__171609_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="pricechange",
            index=models.Index(
                fields=["detected_at"], name="buildings_p_detecte_dc180a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="scrapingrun",
            index=models.Index(
                fields=["start_time"], name="buildings_s_start_t_7a77a2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="scrapingrun",
            index=models.Index(fields=["status"], name="buildings_s_status_aa2b7f_idx"),
        ),
        migrations.AddIndex(
            model_name="watchlistalert",
            index=models.Index(
                fields=["created_at"], name="buildings_w_created_a0485e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="watchlistalert",
            index=models.Index(fields=["read"], name="buildings_w_read_6d1a8b_idx"),
        ),
        migrations.AddIndex(
            model_name="watchlistalert",
            index=models.Index(
                fields=["alert_type"], name="buildings_w_alert_t_3c870e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="watchlistalert",
            index=models.Index(
                fields=["user", "read"], name="buildings_w_user_id_bae76b_idx"
            ),
        ),
    ]
